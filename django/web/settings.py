"""
Django settings for web project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from dotenv import load_dotenv

#IPMAT_MODE라는 환경변수가 있으면 IPMAT_MODE를 그걸로 설정하고, 없으면 development 모드로 설정.
print('You can set IPMAT_MODE env as "development" or "production\nDefault is development')
IPMAT_MODE=os.getenv("IPMAT_MODE") if os.getenv("IPMAT_MODE") else "development"

if IPMAT_MODE=="development":
    load_dotenv()
elif IPMAT_MODE=="production":
    load_dotenv(".production.env")
else:
    print("IPMAT_MODE env 설정해주세요.")
    exit(101)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("IPMAT_DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
if(os.getenv('IPMAT_DEBUG')=="False"):
    DEBUG=False

ALLOWED_HOSTS = ["0.0.0.0", "127.0.0.1","localhost"
                 "ipmat"]


# Application definition

INSTALLED_APPS = [
    # "about", "default", "food", "help", "member", "register", "tag",
    "member", "food", "food_test", "preference",
    # "rangefilter",
    "storages",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': os.getenv("IPMAT_DB_HOST"),
        'PORT': '3306',
        'NAME': os.getenv("IPMAT_DB_NAME"),
        'USER': os.getenv("IPMAT_DB_USER"),
        'PASSWORD': os.getenv("IPMAT_DB_PASSWORD")

    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
# if not DEBUG:
#     STATIC_URL = '/static/'

# CRISPY_TEMPLATE_PACK = 'bootstrap4'
MEDIA_URL = '/uploads/'  # 업로드 할 경로
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')

# AWS S3 Setting
AWS_REGION = 'ap-northeast-2'
AWS_STORAGE_BUCKET_NAME = os.getenv("IPMAT_S3_BUCKETNAME")
AWS_QUERYSTRING_AUTH = False
AWS_S3_HOST = 's3.%s.amazonaws.com' % AWS_REGION
AWS_ACCESS_KEY_ID = os.getenv("IPMAT_S3_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("IPMAT_S3_SECRET_ACCESS_KEY")
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_DEFAULT_ACL = "public-read"

STATIC_URL = '/static/'
# Static Setting
# STATIC_URL = "https://%s/" % AWS_S3_CUSTOM_DOMAIN
# STATICFILES_STORAGE = 'storages.backends.s3boto.S3BotoStorage'

# Media Setting
# MEDIA_URL = "/uploads/"
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
